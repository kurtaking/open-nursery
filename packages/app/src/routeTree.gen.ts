/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthedImport } from './routes/_authed'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as LayoutSignUpImport } from './routes/_layout.sign-up'
import { Route as AuthedDailyLogIndexImport } from './routes/_authed.daily-log.index'
import { Route as AuthedDailyLogHistoryImport } from './routes/_authed.daily-log.history'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSignUpRoute = LayoutSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthedDailyLogIndexRoute = AuthedDailyLogIndexImport.update({
  id: '/daily-log/',
  path: '/daily-log/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDailyLogHistoryRoute = AuthedDailyLogHistoryImport.update({
  id: '/daily-log/history',
  path: '/daily-log/history',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/sign-up': {
      id: '/_layout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LayoutSignUpImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_authed/daily-log/history': {
      id: '/_authed/daily-log/history'
      path: '/daily-log/history'
      fullPath: '/daily-log/history'
      preLoaderRoute: typeof AuthedDailyLogHistoryImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/daily-log/': {
      id: '/_authed/daily-log/'
      path: '/daily-log'
      fullPath: '/daily-log'
      preLoaderRoute: typeof AuthedDailyLogIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedDailyLogHistoryRoute: typeof AuthedDailyLogHistoryRoute
  AuthedDailyLogIndexRoute: typeof AuthedDailyLogIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedDailyLogHistoryRoute: AuthedDailyLogHistoryRoute,
  AuthedDailyLogIndexRoute: AuthedDailyLogIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface LayoutRouteChildren {
  LayoutSignUpRoute: typeof LayoutSignUpRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSignUpRoute: LayoutSignUpRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/sign-up': typeof LayoutSignUpRoute
  '/': typeof LayoutIndexRoute
  '/daily-log/history': typeof AuthedDailyLogHistoryRoute
  '/daily-log': typeof AuthedDailyLogIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthedRouteWithChildren
  '/sign-up': typeof LayoutSignUpRoute
  '/': typeof LayoutIndexRoute
  '/daily-log/history': typeof AuthedDailyLogHistoryRoute
  '/daily-log': typeof AuthedDailyLogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/sign-up': typeof LayoutSignUpRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_authed/daily-log/history': typeof AuthedDailyLogHistoryRoute
  '/_authed/daily-log/': typeof AuthedDailyLogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/sign-up' | '/' | '/daily-log/history' | '/daily-log'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/sign-up' | '/' | '/daily-log/history' | '/daily-log'
  id:
    | '__root__'
    | '/_authed'
    | '/_layout'
    | '/_layout/sign-up'
    | '/_layout/'
    | '/_authed/daily-log/history'
    | '/_authed/daily-log/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed",
        "/_layout"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/daily-log/history",
        "/_authed/daily-log/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/sign-up",
        "/_layout/"
      ]
    },
    "/_layout/sign-up": {
      "filePath": "_layout.sign-up.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/_authed/daily-log/history": {
      "filePath": "_authed.daily-log.history.tsx",
      "parent": "/_authed"
    },
    "/_authed/daily-log/": {
      "filePath": "_authed.daily-log.index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
